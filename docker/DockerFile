# Grafana Dockerfile (production-ready)
# Uses the official Grafana image as base
FROM grafana/grafana:latest

# Set working directory
WORKDIR /etc/grafana

# --- Environment Variables ---
# These can be set via docker-compose, Kubernetes, or .env file for runtime flexibility.
# You can also override at build time with --build-arg, but runtime is recommended.
ARG GRAFANA_ADMIN_USER=admin
ARG GRAFANA_ADMIN_PASSWORD=admin
ARG GRAFANA_PORT=3000
ARG GRAFANA_URL=http://localhost:3000
ARG GRAFANA_API_KEY=

ENV GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
ENV GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
ENV GF_SERVER_HTTP_PORT=${GRAFANA_PORT}
# GRAFANA_URL and GRAFANA_API_KEY are for external scripts/integrations, not core Grafana config

# Optional: Copy provisioning and dashboards if you want to bake them into the image (recommended to mount at runtime instead)
# COPY ../../config/grafana/provisioning ./provisioning
# COPY ../../config/grafana/dashboards ./dashboards

# Expose Grafana default port (can be overridden by env)
EXPOSE ${GRAFANA_PORT}

# Healthcheck (Grafana login page)
HEALTHCHECK --interval=30s --timeout=10s --retries=3 \
    CMD curl -f http://localhost:${GRAFANA_PORT}/login || exit 1

# Entrypoint and CMD are inherited from the official image
# Use environment variables or provisioning for admin user, password, plugins, etc.

# Usage Notes:
# - For production, set all secrets and admin credentials via env or secrets manager (never hardcode).
# - Mount provisioning and dashboards folders via docker-compose or Kubernetes.
# - To add plugins, use GF_INSTALL_PLUGINS env or bake them in with RUN grafana-cli plugins install ...
# - Do not bundle exporters or unrelated services in this image.
# - See https://grafana.com/docs/grafana/latest/installation/docker/ for advanced usage and env vars.